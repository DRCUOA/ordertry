// regisitration and login helpers:
if (document.getElementById('register-button') || document.getElementById('sign-in-button')) {
    document.getElementById('register-button').addEventListener('click', function () {
    document.getElementById('register-modal').style.display = 'block';
  });
    document.getElementById('sign-in-button').addEventListener('click', function () {
    document.getElementById('sign-in-modal').style.display = 'block';
  });

  // register
  // Get the close btn
  const closeRegButton = document.querySelector('#reg-close');

  // Get the modal element
  const modalReg = document.querySelector('#register-modal');

  // When the close button is clicked, set the modal's display property to "none"
  closeRegButton.addEventListener('click', function () {
    console.log('CLOSE BTN CLICKED')
    modalReg.style.display = "none";
  });

  // login
  const closeSignInButton = document.querySelector('#close-log-in');

  // Get the modal element
  const modalSignIn = document.querySelector('#sign-in-modal');

  // When the close button is clicked, set the modal's display property to "none"
  closeSignInButton.addEventListener('click', function () {
    modalSignIn.style.display = "none";
  });

  let header = document.querySelector('#header');
  header.style.display = "None";

  let footer = document.querySelector('#footer');
  footer.style.display = "None";


} else if (document.getElementById('chart')) {
  async function fetchData() {
    // Fetch data from endpoint
    const response = await fetch("/charts/chart-data");
    const data = await response.json();
    console.log(data);
  }
  fetchData();
}

if (document.getElementById('weightloss')) {
  const startDate = new Date(2023, 0, 18); // January 18, 2023 (month index starts at 0)
  let weight = 135;

  const weeklyTargets = [];

  const date = new Date(startDate);
  while (weight > 79.9) {
    date.setDate(date.getDate() + 7);
    weeklyTargets.push({
      date: date.toDateString(),
      targetWeight: weight -= 1.5
    });
  }

  const output = document.getElementById("output");
  const modal = document.getElementById("modal-card");
  const closeButton = document.querySelector(".close-button");
  const dateLabel = document.getElementById("date-label");
  const actualWeightInput = document.getElementById("actualWeight");
  const metSelect = document.getElementById("met");
  const notesTextarea = document.getElementById("notes");
  const saveButton = document.getElementById("save-button");

  weeklyTargets.forEach(target => {
    let row = document.createElement("tr");
    let dateCell = document.createElement("td");
    let targetWeightCell = document.createElement("td");
    let actualWeightCell = document.createElement("td");
    let metCell = document.createElement("td");
    let notesCell = document.createElement("td");

    dateCell.textContent = target.date;
    targetWeightCell.textContent = target.targetWeight;

    // Add input fields to the cells for actual weight and notes
    actualWeightCell.innerHTML = `<input type="number" name="actualWeight" id="actualWeight-${target.date}">`;
    notesCell.innerHTML = `<textarea name="notes" id="notes-${target.date}"></textarea>`;

    // Add acalculated boolean to the met cell
    metCell.textContent = target.actualWeight <= target.targetWeight ? "Met" : "Not Met";

    // Add click event listener to the date cell
    dateCell.addEventListener("click", event => {
      modal.style.display = "block";
      dateLabel.textContent = target.date;
      actualWeightInput.value = target.actualWeight;
      metSelect.value = metCell.textContent;
      notesTextarea.value = target.notes;
    });

    row.appendChild(dateCell);
    row.appendChild(targetWeightCell);
    row.appendChild(actualWeightCell);
    row.appendChild(metCell);
    row.appendChild(notesCell);

    output.appendChild(row);
  });

  // Close button for the modal
  closeButton.addEventListener("click", event => {
    modal.style.display = "none";
  });

  // Save button for the modal
  saveButton.addEventListener("click", event => {
    target.actualWeight = actualWeightInput.value;
    target.notes = notesTextarea.value;
    target.met = metSelect.value;
    modal.style.display = "none";
  });

  // Close modal when click outside of the modal
  window.addEventListener("click", event => {
    if (event.target === modal) {
      modal.style.display = "none";
    }
  });
}


if (document.getElementById('advice4Today')) {
  console.log('fishcakes');
  window.onload = () => {
    getAdvice();
  }
}

// helper functions:
async function getAdvice() {
  const response = await fetch('https://api.adviceslip.com/advice');
  const data = await response.json();
  document.getElementById('advice4Today').innerHTML = data.slip.advice;
}
